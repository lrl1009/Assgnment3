
import os

def secure_hashed_passwd(username, password):
    import hashlib, uuid
import hashlib, uuid

    '''
    @TODO: Students are required to implement this function.
    using salt+pepper+sha3-224 algorithm
    :param username: string repr of username
    :param passwd: a plain text password
    :return: True if given values are stored successfully in outfile var; else returns False
    '''

    #use salt and pepper to hash 'hpasswd' using sha-3-224 algorithm
    hpasswd = hashlib.sha224()
    hpasswd.update(password)
    digest = hpasswd.digest()

    # Add salt
    salt = uuid.uuid4().bytes
    hpasswd.update(password)
    hpasswd.update(salt)
    salteddigest = hpasswd.digest()

    # add pepper
    pepper = os.urandom(16)
    hpasswd.update(pepper)
    saltpepperdigest = hpasswd.digest()

    # Salt + Pepper + Run(Iteration)
    saltpepperdigest = hpasswd.digest()

    N = pow(2, 10)                                 #pow(2, 10) = 2 to the 10 power
    for i in range(0, N):
        saltpepperdigest = hashlib.sha224(saltpepperdigest).digest()

    # return hex version salt,pepper,saltpepperdigest
    return salt.hex(), pepper.hex(), saltpepperdigest.hex()